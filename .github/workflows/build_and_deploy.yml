name: Build and Deploy Project

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: read

jobs:
  linter:
    runs-on: self-hosted
    container:
      image: catthehacker/ubuntu:act-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync
          uv run pre-commit install

      - name: Lint pre-commit
        run: uv run pre-commit run --all-files --hook-stage manual
  
  tests:
    runs-on: self-hosted
    container:
      image: catthehacker/ubuntu:act-22.04

    needs: linter
    env:
      DATABASE_URL: sqlite:///db:sqlite3
      DOMAIN: http://localhost:8000
      SECRET_KEY: THIS-VERY-STRONG-SECRET-KEY

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Cache Python environment
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: venv-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv venv
          uv sync

      - name: Create settings file
        run: |
          cp .env.example .env


      - name: Create migrate
        run: |
          make migrate

      - name: Run PyTest
        env:
          DB_HOST: localhost
        run: |
          make test
          make test-coverage
          
  build-and-push:

    runs-on: self-hosted
    needs: tests
    container:
      image: catthehacker/ubuntu:act-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: git.pressanybutton.ru
          username: ${{ secrets.GITEA_LOGIN }}
          password: ${{ secrets.GITEA_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: git.pressanybutton.ru/codeonanapkin/hexlet-4:latest
          provenance: false
          no-cache: true

  deploy:
    needs: build-and-push

    runs-on: self-hosted
    steps:
      - name: Deploy on THIS VPS WHERE mounted GIT Runner
        run: |
          docker compose -f /home/vvd/task-manager/docker-compose.yaml pull
          docker compose -f /home/vvd/task-manager/docker-compose.yaml up -d --build
